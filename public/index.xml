<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Benjamin Schwartz</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Benjamin Schwartz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 14 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43; Notes</title>
      <link>http://localhost:1313/notes/cpp/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/cpp/</guid>
      <description>Table of Contents Link to heading Type Deduction Template Type Deduction Array Arguments Function Arguments auto Type Deduction Value Categories Reference Types Forwarding References const Qualifier constexpr vs const static Keyword Casting std::move Concurrency Threading with std::thread When to Use join() std::thread with a Lambda Multiple Threads Using std::jthread Preventing Data Races and std::mutex Preventing Deadlock with std::lock_guard Using std::atomic to Update a Shared Value The Compiler Compilation Unit Memory Management Static vs Dynamic memory Pointers vs References Smart pointers std::shared_ptr std::unique_ptr Classes What is the vtable ?</description>
    </item>
    <item>
      <title>OS Notes</title>
      <link>http://localhost:1313/notes/os/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/os/</guid>
      <description>Table of Contents Link to heading The Stack &amp;amp; The Heap The Heap The Stack Stack Overflow Stack Frames Virtual Memory Not Enough Memory Memory Fragmentation Security Physical Memory Implementation Page Table Mapping Translation Lookaside Buffer (TLB) Memory Management Unit (MMU) Multi-level Page Tables The Stack &amp;amp; The Heap Link to heading A program uses memory that is divided into five main segments:&#xA;code segment (compiled code, is read-only) bss segment (zero-initialised global and static variables) data segment (initialised global and static variables) heap (dynamically allocated variables) stack (local variables, stack frames incl.</description>
    </item>
    <item>
      <title>System Design Notes</title>
      <link>http://localhost:1313/notes/sd/</link>
      <pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/sd/</guid>
      <description>Table of Contents Link to heading Chapter 1 Web Tier Data Tier Cache Tier Content delivery network (CDN) Statefless vs Stateful Architecture Data Centers Message Queue Logging, Metrics, Automation Vertical vs. Horizontal Scaling Sharding for scaling Databases Summary of Scaling Up Chapter 2 Useful Latency Numbers Back-of-the-envelope Estimations Twitter Example Framework 1. Understand problem and establish design scope (3-10mins) 2. Propose high-level design and get buy-in (10-15mins) 3. Design Deep Dive (10-25mins) 4.</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>I&amp;rsquo;m Benji. I&amp;rsquo;m a software engineer from Sydney, Australia.&#xA;I&amp;rsquo;ve just graduated with from UNSW, with a Bachelor of Computer Engineering with First Class Honours, and an HD-Average. I was recently awarded the &amp;lsquo;Brightest Minds&amp;rsquo; full scholarship for postgraduate studies at UNSW. My academic work covered many topics in computer science, focussing on both software and hardware design.&#xA;I&amp;rsquo;m primarily a backend/systems dev. I&amp;rsquo;m most competent in C++ but am also proficient in Rust, Java, and Go.</description>
    </item>
    <item>
      <title>Contact</title>
      <link>http://localhost:1313/contact/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contact/</guid>
      <description>Feel free to contact me at benji.schwartz2013@gmail.com.</description>
    </item>
    <item>
      <title>Projects</title>
      <link>http://localhost:1313/projects/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/</guid>
      <description>CellSim: Full-stack development of a web-hosted editing and visualization tool for CellML models. Client-server architecture (backend in C++using Mongoose, frontend with VueJS). Repository.&#xA;Rust multi-user spreadsheet: Implemented a multi-threaded spreadsheet program controlled by simple commands. Manages concurrent interactions efficiently and safely using Rust&amp;rsquo;s powerful features. Repository.&#xA;Custom Rust Interpreter: As part of my univerisity studies, I build an interpreter for the Logo language in Rust. Repository.&#xA;Zipf&amp;rsquo;s Law: A project to validate the rank-frequency distribution of the English language, given a large enough sample of text.</description>
    </item>
  </channel>
</rss>
